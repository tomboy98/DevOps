-----------------------------------------Docker Fundamentals---------------------------------------------------------
/var/lib/docker - place where all docker files are stored.
docker --version - Check the version
docker pull <image_name> - To pull the latest image from docker hub
docker images - To check which all images are present along with sizes and tags.
docker run -it -d <image_name> - To run the container iteratively in the background for the specific image
docker run <image_name> - To run the container
docker run -d --name <name_of_the_container> <image_name> - Runs a container with particular image name
docker ps - Shows the docker containers which are running.
docker ps -a - Shows all the containers which are both exited and also running.
docker exec -it <container_id> bash - To go inside the container and perform any task.
docker start <container_id> - To start a container
docker stop <container_id> - To stop a container
docker rm <container_id> - Removes the container
docker rmi <image_id>- Removes a specified image
docker --help - all the basic docker commands and options are displayed
docker login - To login into docker desktop
docker kill <container_id> - Forcefully stop the container and remove it
docker images prune - Removes unused images
docker logs <container_id> - To check the container logs
docker commit <container_id><username/image_name_we_have_to_push> - Committing the new image to docker hub
docker push <username/image_name> - Pushing the image into docker hub
docker history <running_image_name> - Displays the history of the image
docker search <image_name> - Searches for the particular image name in the docker hub 
docker stop $(docker ps -aq) - Stop all the containers.
docker rm $(docker ps -aq) - Remove all the containers 
docker rmi $(docker images) - Removes all the images.
docker pull <image_name> - It pulls the specific image
docker save -o <image-name>.tar <imagename>
docker load -i <exported-image>.tar
docker inspect sha-digest - To check the SHA Encryction 
docker run -d -p <IP:ADDRESS/LOCALHOST><host_port>:<port_no_inside_the_container> -e <ENV_VARIABLE=value> <image_name> -v <SRC>:<DST(var/lib/docker> --network=<network_name>- Here the container is run in a detached mode with host port 38282 with the port 8080 inside the container along with the enviornment variable -v indicates the volume mounted. Also for attaching network.
-----------------------------------------DOCKERFILE-----------------------------------------------------------------------------------------------
docker build -t <container_name> . - Building the dockerfile in current directory with a specific name
docker run python:3.6 cat /etc/*release* - For finding out the base image of the python.
--------------------------------------------------ENV Variables--------------------------------------------------------------------------------------------
docker inspect container-name/container-id - To inspect the container with all the details.
docker inspect 1f5413790360 | grep -A 10 Env - To inspect pecifically env variable.
docker run -d ubuntu sleep 1000 - Example for running command after startig container

docker run --name=clickcounter --link redis:redis -p 8085:5000 kodekloud/click-counter ----------link <name or id>:alias flag used for linking containers esp database containers
docker compose up -d - running containers in detach mode.
docker compose down - stopping the containers.

-----------------------------------------------DOCKER NETWORK-----------------------------------------------------------------------------------------------------
docker network ls- Here it lists the network.
docker insect <container-name> - Displays the network in the container.
docker network inspect <network_name> - To inspect subnets etc.
docker network create --driver bridge --subnet 182.18.0.1/24 --gateway 182.18.0.1 wp-mysql-network - Example for creating a network.


-----------------------------------Docker_Volume-------------------------------------------------------------------------

docker volume create <volume_name> - To create a volume
docker volume ls - To list the volumes
docker volume inspect <volume_name>- Shows the mount points, labels etc
docker volume rm <volume_name> - To remove the volumes
Volumes:
docker run -d --name test -v myvol2:/app nginx:latest - -v <SRC_CONTAINER>:<TARGET_DESTINATION_INSIDE_CONTAINER>
docker run -d \ -------------------- Driver
  --name sshfs-container \
  --volume-driver vieux/sshfs \
  --mount src=sshvolume,target=/app,volume-opt=sshcmd=test@node2:/home/test,volume-opt=password=testpassword \
  nginx:latest
docker service create -d \---------------NFS
  --name nfs-service \
  --mount 'type=volume,source=nfsvolume,target=/app,volume-driver=local,volume-opt=type=nfs,volume-opt=device=:/var/docker-nfs,volume-opt=o=addr=10.0.0.10' \
  nginx:latest
